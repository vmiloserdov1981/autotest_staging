{"name": "test_user_stays_on_accounts_page_after_reload", "status": "broken", "statusDetails": {"message": "TypeError: setup() missing 1 required positional argument: 'browser'", "trace": "cls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x03CC11E0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(cls, func, when, reraise=None):\n        #: context of invocation: one of \"setup\", \"call\",\n        #: \"teardown\", \"memocollect\"\n        start = time()\n        excinfo = None\n        try:\n>           result = func()\n\n..\\..\\..\\environments\\selenium_env\\lib\\site-packages\\_pytest\\runner.py:220: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\environments\\selenium_env\\lib\\site-packages\\_pytest\\runner.py:192: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n..\\..\\..\\environments\\selenium_env\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n..\\..\\..\\environments\\selenium_env\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n..\\..\\..\\environments\\selenium_env\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n..\\..\\..\\environments\\selenium_env\\lib\\site-packages\\_pytest\\nose.py:12: in pytest_runtest_setup\n    call_optional(item.parent.obj, \"setup\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nobj = <CS.test_main_page.TestUserLogin object at 0x04052D30>, name = 'setup'\n\n    def call_optional(obj, name):\n        method = getattr(obj, name, None)\n        isfixture = hasattr(method, \"_pytestfixturefunction\")\n        if method is not None and not isfixture and callable(method):\n            # If there's any problems allow the exception to raise rather than\n            # silently ignoring them\n>           method()\nE           TypeError: setup() missing 1 required positional argument: 'browser'\n\n..\\..\\..\\environments\\selenium_env\\lib\\site-packages\\_pytest\\nose.py:37: TypeError"}, "attachments": [{"name": "stdout", "source": "3e851265-b039-4a19-a419-2f606129f67e-attachment.txt", "type": "text/plain"}], "start": 1618822690169, "stop": 1618822690169, "uuid": "93f4af7a-d8ac-434e-81bf-b410ae4dd416", "historyId": "61587204c87f1b8de647fb92e7bf7051", "testCaseId": "20257d04f17f167eb65bc6f9232bcee8", "fullName": "test_main_page.TestUserLogin#test_user_stays_on_accounts_page_after_reload", "labels": [{"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestUserLogin"}, {"name": "host", "value": "LAPTOP-7TTGKM9O"}, {"name": "thread", "value": "17168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main_page"}]}